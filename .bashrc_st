[ -e ~/.stconfig-before ] && source ~/.stconfig-before
source ~/.commonrc 
source ~/.aliases-common

sx() { screen -x "$1/"; }
# username completion for sx
_sx_comp() {
    local screen_dir=/var/run/screen
    local cur
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(perl -e 'while (<$ARGV[0]/S-$ARGV[1]*>) { m|$ARGV[0]/S-([^/]*)|; print "$1\n" }' $screen_dir $cur ) )
    return 0
}
complete -F _sx_comp sx

# sb completion, returns a list of all local and remote branches as one list
_sb_comp() {
    local current=~/src/st/current/.git
    local cur
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(git --git-dir $current branch -a | perl -e 'while (<STDIN>){ s{^..(?:[^/]+/)?}{}g; print if (/^$ARGV[0]/); }' $cur) )
    return 0
}
complete -F _sb_comp sb

# see http://pueblo.sourceforge.net/doc/manual/ansi_color_codes.html
COLOR_RESET="\[\033[0;39;49m\]"
COLOR_BRANCH="\[\033[0;1;32;44m\]"
COLOR_WORKDIR="\[\033[0;1;33;42m\]"

# shamelessly ripped off from http://github.com/rtomayko/git-sh/tree/master
_git_prompt_color() {
        br=$(git symbolic-ref -q HEAD 2>/dev/null)
        if [ -n "$br" ] ; then
                br=${br#refs/heads/}
        else
                br=$(git rev-parse --short HEAD 2>/dev/null)
        fi
        rel=$(git rev-parse --show-prefix 2>/dev/null)
        rel="${rel%/}"
        loc="${PWD%/$rel}"
        PS1="\u@\h:${COLOR_BRANCH}${br}${COLOR_RESET}!${COLOR_WORKDIR}${loc/*\/}${rel:+/$rel}${COLOR_RESET}$ "
}

# Set this in your ${USER}_after file to use the git prompt:
# PROMPT_COMMAND=_git_prompt_color
