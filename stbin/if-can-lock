#!/usr/local/bin/perl
use warnings;
use strict;

use Fcntl ':flock';

sub usage {
    print <<'END_OF_HELP';
    USAGE:
        if-can-lock LOCKFILE COMMAND [ARGS ...]

        Tries to acquire an exclusive lock on LOCKFILE.  Exits nonzero
        immediately if LOCKFILE does not exist.  Exits 0 immediately if it is
        unable to acquire the lock.  Otherwise, execs COMMAND with ARGS (the
        lock will continue to be held after the exec).  When COMMAND exits,
        the lock will automatically be released.
END_OF_HELP
    exit 0;
}

my $lockfile = shift;
usage() unless @ARGV;

open L, $lockfile or die "$lockfile: $!";
flock L, LOCK_EX|LOCK_NB or exit 0;

# Perl must be doing something before calling execve(2) that invalidates our
# flocks.  Thus, we have to use system instead of exec here to make sure the
# called program inherits our lock.
system @ARGV;
exit $?;
