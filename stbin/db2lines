#!/usr/local/bin/perl
use warnings;
use strict;

use DB_File;
use Fcntl ':flock';
use Getopt::Long;

my $separator = ',';

Getopt::Long::Configure('bundling');

GetOptions('F|field-separator=s' => \$separator);

sub usage {
    print <<END_OF_HELP; exit 0;
db2lines - Dump the entries in a simpdb-style DB file linewise.

The format is essentially CSV: KEY1,KEY2,...,KEYn,VALUE.
No escaping is done, and tough luck if your chosen separator or a newline
occurs within one of your keys or values.

      USAGE:
          db2lines [-Fc] db_path

      -Fc    choose c to be the separator character instead of ',
END_OF_HELP
}

my $db_path   = shift or usage();
my $lock_file = "$db_path.lock";

my %db;

open L, $lock_file or die "$lock_file: $!";
flock L, LOCK_SH or die "$lock_file: $!";
tie %db, 'DB_File', $db_path or die "$db_path: $!";

while (my ($k, $v) = each %db) {
    print STDOUT (join $separator, (split $;, $k), $v), "\n";
}
