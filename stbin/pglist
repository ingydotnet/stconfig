#!/bin/sh
# Author: Mischa Sandberg
#
# pglist [-d|--data] [schema] 
#   Formatted schema dump
#-------------------------------------------------------------------------
if [ .$1 = .-d ]; then OPT_DATA=y; shift; else OPT_DATA=n; fi

SCHEMA=$1; SCHEMA=${SCHEMA:-public}

if [ $OPT_DATA = y ]; then
    # Delete comments (OIDS), empty COPY blocks, and pmdb_schema_event data.
    pg_dump --no-owner --no-privileges --schema=$SCHEMA $PGDATABASE \
    | sed -n '/^-/d; /^COPY pmdb_schema_event/,/^\\/d
		/^COPY/!{p;d;}; h;n;/^\\./d; H;g;p'
else
    # Delete comments (OIDS).
    pg_dump --no-owner --no-privileges --schema=$SCHEMA --schema-only $PGDATABASE \
    | egrep -v ^-
fi \
| awk ' {print}
	/^CREATE VIEW / {
	    which = "where relname=" A $3 A
	    getline	# Discard the ORIGINAL one-line "SELECT ..." stmt
	    system("psql -qtc\"select pg_get_viewdef(oid,true) from pg_class "which"\"")
	}' A=\' \
| sed '
    s/\<'$SCHEMA'\>\.//g
    /^SELECT pg_catalog.setval(pg_catalog.pg_get_serial_sequence('.*'), 1,/d
    
    s/character varying/varchar/g
    s/'\''::text/'\''/g
    s/::"unknown"//g
    /CREATE.*INDEX/s/ USING btree//
    s/timestamp\([(0-9)]*\) without time zone/timestamp\1/g
    s/timestamp\([(0-9)]*\) with time zone/timestamptz\1/g
    s/('\''now'\'')::timestamp[tz]*(6)/current_timestamp/g
    s/'\''1970-01-01 00:00:00+00'\''::timestamptz/'\''epoch'\''::timestamptz/g

    s/^\( *\)\([ADD ]*CONSTRAINT [^ ]*\) /\1\2\
\1        /

    /CREATE.*INDEX/ {
	s/ ON /\
	    ON /
	s/ WHERE /\
	    WHERE /
    }

    /CHECK (/ {
	# string::text -> string
	s/\((*'\''[^'\'']*'\''\))*::text/\1/g
	:again

 	# (name) -> name 	(string) -> string
	s/(\([":a-z_A-Z0-9]*\))/\1/g
	t again

	# (nameX = numA) OR (nameX = numB)	->   nameX IN (numA,numB)
	s/(\([":a-z_A-Z0-9]*\) = \([-0-9.]*\)) OR (\1 = \([-0-9.]*\))/\1 IN (\2,\3)/
	t again

	# (nameX IN (...)) OR (nameX = numC)  ->   nameX IN (...,numC)
	s/(\([":a-z_A-Z0-9]*\)\( IN ([^)]*\))) OR (\1 = \([-0-9.]*\))/\1\2, \3)/
	t again

	# (nameX = strA) OR (nameX = strB)	->   nameX IN (strA,strB)
	s/(\([":a-z_A-Z0-9]*\) = \('\''[^'\'']*'\''\)) OR (\1 = \('\''[^'\'']*'\''\))/\1 IN (\2, \3)/
	t again

	# (nameX IN (...)) OR (nameX = strC)  ->   nameX IN (...,strC)
	s/(\([":a-z_A-Z0-9]*\)\( IN ([^)]*\))) OR (\1 = \('\''[^'\'']*'\''\))/\1\2, \3)/
	t again

	s/((\(.*\)))/(\1)/
    }

    s/\( *\)\(FOREIGN KEY (.*)\) \(REFERENCES \)/\1\2\
\1\3/
' \
| grep -v "CREATE SCHEMA" \
| uniq	# eliminate duplicate blank lines
exit 0
