#!/usr/bin/perl
use strict;
use warnings;
use MIME::Base64;
use LWP::UserAgent;
use HTTP::Request::Common;
use Getopt::Long;

my ($server, $tag, $file) = get_options();

if ($0 =~ /copy$/) {
    do_copy($server, $tag, $file);
} elsif ($0 =~ /paste$/) {
    do_paste($server, $tag, $file);
} else {
    die "The program name must end in either 'copy' or 'paste' to run.\n";
}

sub do_copy {
    my ($server, $tag, $file) = @_;
    my $fh = get_fh($file, "<");
    local $/ = undef;
    my $data = <$fh>;
    send_to_server($server, $tag, $data);
}

sub do_paste {
    my ($server, $tag, $file) = @_;
    my $fh = get_fh($file, ">");
    print $fh (get_from_server($server, $tag));
}

sub send_to_server {
    my ($server, $tag, $data) = @_;
    $data = eval { encode_base64($data) };
    die "Error: Unable to encode data to Base64: $@\n" if $@;
    my $ua = LWP::UserAgent->new;
    my $resp = $ua->request(POST "$server?tag=$tag", {data => $data});
    die "Error: " . $resp->status_line . "\n" if $resp->is_error;
}

sub get_from_server {
    my ($server, $tag) = @_;
    my $ua = LWP::UserAgent->new;
    my $resp = $ua->request(GET "$server?tag=$tag");
    die "Error: " . $resp->status_line . "\n" if $resp->is_error;
    my $data = eval { decode_base64($resp->content) };
    die "Error: Unable to decode returned data: $@\n" if $@;
    return $data;
}

sub get_fh {
    my ($file, $mode) = @_;
    if (defined $file) {
        open(FILE, $mode, $file) || die "Unable to open file $file: $!\n";
        return \*FILE;
    } else {
        if ($mode eq '<') {
            return \*STDIN;
        } elsif ($mode eq '>') {
            return \*STDOUT;
        }
    }
}

sub get_options {
    my ($server, $tag, $file, $help);
    GetOptions("server|s=s" => \$server, 
               "tag|t=s", \$tag,
               "help|h", \$help);
    die usage() if $help;
    die usage("Too many arguments") if @ARGV > 1;
    $server ||= $ENV{WCNP_SERVER} || die usage("No server specified");
    $tag ||= 'default';
    $file = shift(@ARGV);
    return ($server, $tag, $file);
}

sub usage {
    my $error = shift || "";
    return <<USAGE;
Usage: $0 [-s server] [-t tag] [file]
$error

    --server='server'
    -s 'server'
        The server for web copy-n-paste to use.  If not specified the
        WCNP_SERVER environment variable is used.

    --tag='tagname'
    -t 'tagname'
        When copying or pasting save the data using the given tag name.  It can
        later be retrieved using that tag.  Basically a seperate clipboard
        buffer with a name.  Using a tagname of 'default' is the same as not
        supplying any tag at all.

    file
        The name of the file to copy from or paste to.  If not specified then
        pasting goes to STDOUT and copying is read from STDIN.

USAGE
}
