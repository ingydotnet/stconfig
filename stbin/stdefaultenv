#!/usr/bin/env perl
use strict;
use warnings;

my %default_env = (
    ST_TRUNK          => '$HOME/src/st/trunk',
    SVN_COMMAND       => 'svk',
    NLW_TEST_FASTER   => '1',
    ST_HAXORS         => get_haxors(),
    LANG              => 'en_US.utf-8',
    REMOTE_USER       => 'devnull1@socialtext.com',
    EDITOR            => 'vim',
    VISUAL            => 'vim',
    TEST_LESS_COMMENT => '\'$d -- $u\'',
    COLOR             => '32',
    SCREENCOLOR       => 'g',
    WW                => 'base/javascript/Wikiwyg',
    ST_CODE_REPO      => 'https://repo.socialtext.net:8999/svn/code',
    WCNP_SERVER       => "'http://panacea.canonical.org/~matthew/cgi-bin/wcnp_server.cgi?who=$ENV{USER}'"
);

$default_env{LD_LIBRARY_PATH} = '/usr/lib/debug:$LD_LIBRARY_PATH'
  if -e '/usr/lib/debug';

for my $name (keys %default_env) {
    print "export $name=$default_env{$name};"
      unless $ENV{$name} and $name ne 'PATH';
}

# path is special because it depends on $ST_TRUNK, and is an array, so it fits
# better outside the above loop.
if ($ENV{PATH} !~ /stbin/) {
    printf "export PATH=%s; ", join ':', qw(
      ~/stbin
      ~/bin
      ~/local/bin
      /usr/local/bin
      $ST_TRUNK/nlw/bin
      $ST_TRUNK/nlw/dev-bin
      $PATH
    );
}

sub get_haxors {
    my $file = "$ENV{HOME}/.st-haxors";
    -e $file
        ? join ',', map { chomp; $_ } slurp($file)
        : ''
}

sub slurp {
    my $file = shift;
    open my $fh, $file or die "Could not open $file: $!\n";
    return <$fh>;
}
