#!/usr/bin/perl
use strict;
use warnings;
use lib "$ENV{ST_SRC_BASE}/current/nlw/lib";
use Socialtext::System qw/shell_run/;
use Term::ANSIColor;
use Getopt::Long;

my %opts;
GetOptions( \%opts,
    'quiet',
    'no-restart'
) or usage();

my $what_to_refresh = shift;

my $src_base = $ENV{ST_SRC_BASE} or die "\$ST_SRC_BASE is not defined!";
my $current = readlink("$src_base/current");
die "No current branch set!" unless $current;
(my $branch_name = $current) =~ s#.+/##;
$branch_name = $what_to_refresh if $what_to_refresh;

my @repos = split m/\s+/, qx(st-repo-list);
for my $r (@repos) {
    color_print('yellow', "Updating $branch_name - $r\n");

    if ($r eq 'socialtext') {
        run("cd $src_base/$branch_name; git-pull --rebase");
    }
    else {
        my $dir = "$src_base/$branch_name/$r";
        next unless -d $dir;
        run("cd $dir; git-pull --rebase");
    }
}

color_print('green', "All repositories of $branch_name updated!\n");

run("nlwctl restart")
    unless $opts{'no-restart'};
exit;

sub run {
    my $cmd = shift;
    local $Socialtext::System::SILENT_RUN = 0;
    if ($opts{quiet}) {
        $cmd = "$cmd > /dev/null";
        $Socialtext::System::SILENT_RUN = 1;
    }
    shell_run($cmd);
}

sub usage {
    die <<EOT;
USAGE: $0 [--quiet] [branch]

Update the current (or specified branch) across all repositories.
EOT
}


sub color_print {
    my $color = shift;
    my $msg = shift;
    print color($color), $msg, color('reset');
}
