#!/usr/local/bin/perl
use warnings;
use strict;

use DB_File;
use Fcntl ':flock';

sub usage {
    print <<END_OF_HELP; exit 0;
      USAGE:
          simpdb db_path update KEY1 [KEY2 ... KEYn] VALUE
          simpdb db_path select KEY1 [KEY2 ... KEYn]
END_OF_HELP
}

my $db_path   = shift or usage();
my $verb      = shift or usage();
my $lock_file = "$db_path.lock";

my %db;
if ( $verb eq 'update' ) {
    assert_argcount(2);
    lock_and_tie(LOCK_EX);
    my $val = pop @ARGV;
    $db{ join $;, @ARGV } = $val;
}
elsif ( $verb eq 'select' ) {
    assert_argcount(1);
    lock_and_tie(LOCK_SH);
    print STDOUT $db{ join $;, @ARGV }, "\n";
}
else {
    usage();
}

sub lock_and_tie {
    my $lock_type = shift;
    if ( !-f $lock_file ) {
        system qq(touch "$lock_file.tmp.$$");
        link "$lock_file.tmp.$$", $lock_file
            or die "$lock_file.tmp.$$ -> $lock_file: $!";
        unlink "$lock_file.tmp.$$" or die "$lock_file.tmp.$$: $!";
    }
    open L, $lock_file or die "$lock_file: $!";
    flock L, $lock_type or die "$lock_file: $!";
    tie %db, 'DB_File', $db_path or die "$db_path: $!";
}

sub assert_argcount { usage() unless @ARGV >= $_[0] }
