#!/usr/bin/perl
use strict;
use warnings;
use lib "$ENV{HOME}/src/st/current/nlw/lib";
use Socialtext::File qw/get_contents/;
use TAP::Parser;
use Socialtext::Resting::Getopt qw/get_rester/;
use Socialtext::Resting;
use Data::Dumper;
use Getopt::Long;

my $r = get_rester(workspace => 'st-sandbox');

my $filename = shift or usage();
usage("Invalid file: $filename") unless -e $filename;

my $wikitest_tap = get_contents($filename);
my $tp = TAP::Parser->new( { tap => $wikitest_tap } );

my @failures;
while(my $r = $tp->next) {
    next unless $r->type eq 'test';
    next if $r->is_ok;
    push @failures, $r->as_string;
}

my $branch = readlink("$ENV{HOME}/src/st/current") || 'unknown';
$branch =~ s#.+/##;
my $revision = qx($ENV{SVN_COMMAND} info $ENV{HOME}/src/st/$branch | grep Revision | awk '{print \$2}');
chomp $revision;
my $num_tests = $tp->tests_run;
my $num_passed = $tp->passed;
my $num_failed = $tp->failed;

my $results = <<EOT;
^ Test Results

*Branch:* $branch
*Revision:* $revision

*Tests Run:* $num_tests
*Tests Passed:* $num_passed
*Tests Failed:* $num_failed
EOT

if (@failures) {
    $results .= "^ Failures\n\n.pre\n" . join("\n", @failures) . "\n.pre\n";
}
$results .= "\n^ Full Test Output\n\n.pre\n" . $wikitest_tap . "\n.pre\n";

my $result_page = "$branch wikitest results";
$r->put_page($result_page, $results);
$r->put_pagetag($result_page, $_) for ("branch: $branch", 'test-result');
my $uri = $r->server . "/" . $r->workspace . "/?" . Socialtext::Resting::_name_to_id($result_page);
print "$results\n", 
      "Uploaded test results to $uri\n";

exit;


sub usage {
    my $msg = shift || '';
    die <<EOT;
$msg

USAGE: $0 [<rester options>] <TAP file>

Where rester options specify where the tap file should be uploaded to.
The default REST information comes from ~/.wikeditrc.

Specify --workspace to choose where to upload the result summary to.
The workspace defaults to the `st-sandbox` workspace.
EOT
}
