#!/usr/bin/env perl
# @COPYRIGHT@

use strict;
use warnings;

use File::Path qw(rmtree);
use Getopt::Long;

my $SVN_REPO = 'https://repo.socialtext.net:8999/svn';

my %opts;
GetOptions(
    'type:s'    => \$opts{type},
    'source:s'  => \$opts{source},
    'message:s' => \$opts{message},
    'version:s' => \$opts{version},
    'help'      => \$opts{help},
) or die "\n";

show_help() if $opts{help};
show_help() unless $opts{type};

die "Do not run this script via sudo"
    unless $>;

$opts{message} = "\n$opts{message}" if $opts{message};
$opts{message} ||= '';

my $nlw_dir = "$ENV{HOME}/src/st/$opts{source}";
chdir $nlw_dir or die "Can't chdir to $nlw_dir: $!";

my $tag_release = qq(tag-release $opts{source} $opts{type} "$opts{message}" )
                  . ($opts{version} || '');
my $output = qx($tag_release 2>&1);
(my $copy_name = $output) =~ s/^Created tag (\S+) from branch .+/$1/s;
die "Couldn't find the tag name ($output)" unless $copy_name;

my $svn_copy_path = "$SVN_REPO/code/tags/$copy_name";

print "Creating new tag $copy_name\n";

my $export_path = "/tmp/$$";

print "Exporting $svn_copy_path to $export_path\n";

system( 'svn', '-q', 'export', $svn_copy_path, $export_path );

chdir $export_path . '/nlw';

# create debian packages and upload using brett
my $deb_msg = "$opts{message}\ntag: $copy_name";
my $archive = 'dapper'; # should be based on version?
system("brett -m '$deb_msg' -A $archive");
exit;


sub show_help {
    print <<"EOF";

make-release --type=alpha --source=trunk

 This script accepts the following options:

  --type     The type of tag or branch in the SVN repository which is
             being created or updated.
             This should be one of "alpha", "beta", "release".
             This script will create a tag for the release.

  --source   The name (not path) of the "source" branch.
             If you specify "trunk", it will use trunk.  Otherwise,
             if you give something like "release-1.7.2" it will use
             /branches/release-1.7.2

  --message  Append the provided string to the svn log messages.

  --version  Use this version for the created tag, rather than
             the VERSION in the local checkout.

EOF

    exit;
}
