#!/bin/bash -e

usage() {
    cat <<END_OF_HELP
USAGE:
    test-branch add stable-1.8.1
    test-branch (remove|rm) exp-ruby-rewrite
    test-branch status trunk
    test-branch htstatus stable-1.8.2
    test-branch (list|ls)
END_OF_HELP
    exit 0
}

verb="$1"
branch="$2"

DIR=$(dirname $0)
CHECKOUTS=~testrunner/checkouts

case "$verb" in
    (a|ad|add)
        [ -z "$branch" ] && usage
        [ ! -d ~testrunner/$branch ]
        [ ! -d ~testrunner/$CHECKOUTS/$branch ]
        sudo su - testrunner "
            LANG=en_US.UTF-8 \
            svn co $ST_CODE_REPO/branches/$branch \
            && mv $branch $CHECKOUTS
        "
        ;;
    (r|rm|re|rem|remo|remov|remove)
        [ -z "$branch" ] && usage
        sudo su - testrunner "
            mv $CHECKOUTS/$branch . \
            && rm -fr $branch
        "
        ;;
    (s|st|sta|stat|statu|status)
        [ -z "$branch" ] && usage
        db2lines $CHECKOUTS/$branch/test.db \
        | perl -F, -alne ' 
            eval qq( \$$F[0]\{\$F[1]\} = \$F[2] );
            END {
                foreach $test (sort keys %status) {
                    $lastpass{$test} ||= "NEVER";
                    print
                        $status{$test} eq q(passing) ? q(+) : q(-),
                        "$lastpass{$test} $test";
                }
            }
        '
        ;;
    (hti|htin|htind|htinde|htindex)
        echo '<TITLE>testrunner report index</TITLE>'
        echo '<TABLE>'
        for branch in $($0 ls); do
            branch=$(echo $branch | perl -pe 's,/$,,')
            html_file="${branch}.html"
            echo "<TR><TD><A href="$html_file">$branch</A></TD>"
            echo -n '<TD STYLE="color: white; background-color: '
            if $0 status $branch | egrep -q '^-' ; then
                echo -n red
            else
                echo -n green
            fi
            echo -n '">'
            ls -l $html_file | awk '{print $6 " " $7}'
            echo '</TD></TR>'
        done
        echo '</TABLE>'
        ;;
    (hts|htst|htsta|htstat|htstatu|htstatus)
        [ -z "$branch" ] && usage
        db2lines $CHECKOUTS/$branch/test.db \
        | perl -F, -alne ' 
            eval qq( \$$F[0]\{\$F[1]\} = \$F[2] );
            END {
                print
                    qq(<TITLE>'"$branch"'</TITLE>\n),
                    q(<TABLE>),
                    q(<TR><TH colspan=2>'"$branch"'</TH>),
                    q(<TH colspan=4>'"$(date +%Y-%m-%d\ %H:%M:%S)"'),
                    q(</TH></TR>);
                $i = 0;
                foreach $test (sort keys %status) {
                    $lastpass{$test} ||= "NEVER";
                    ++$i;
                    print q(<TR>) if ($i % 3 == 1);
                    print
                        q(<TD STYLE="color: white; background-color: ),
                        $status{$test} eq q(passing) ? q(green) : q(red),
                        qq(">$lastpass{$test}</TD><TD>$test</TD>);
                }
                print q(</TABLE>);
            }
        '
        ;;
    (l|ls|li|lis|list)
        cd $CHECKOUTS
        ls -1d */
        ;;
    (*)
        usage
        ;;
esac
